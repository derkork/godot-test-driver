name: 🖼 Visual Tests
on:
  - pull_request
  - workflow_dispatch

jobs:
  experiment:
    name: 🖼 Visual Tests
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_NOLOGO: true
    strategy:
      # Don't cancel other runners if one fails.
      fail-fast: false
      matrix:
        # Put the operating systems you want to run on here.
        render-driver: [vulkan, opengl3]
    defaults:
      run:
        shell: bash
    steps:
      - name: 🧾 Checkout
        uses: actions/checkout@v3
        with:
          lfs: true
          submodules: 'recursive'

      - name: 📎 Infer Godot Version
        id: infer_godot_version
        run: |
          replace_last_period() {
            local version="$1"
            local prerelease="${version##*-}"
            if [ "$prerelease" != "$version" ]; then
              prerelease="${prerelease//./}"
              version="${version%-*}-$prerelease"
            fi
            echo "$version"
          }

          # Check if global.json exists
          if [ -f "global.json" ]; then
            # Load the Godot version from the global.json file in the repository
            # and convert it to the format required by setup-godot.
            GODOT_VERSION=$(cat global.json | grep -o '"Godot.NET.Sdk": "[^"]*' \
              | grep -o '[^"]*$')
            GODOT_VERSION=$(replace_last_period "$GODOT_VERSION")
            echo "🤖 Inferred setup-godot version: $GODOT_VERSION"
            echo "godot_version=$GODOT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "❌ global.json not found."
            exit 1
          fi

      - name: 💽 Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          # Use the .NET SDK from global.json in the root of the repository.
          global-json-file: global.json

      - name: 📦 Restore Dependencies
        run: dotnet restore

      # Trying to cache the apt packages did not work. Fortunately, this step
      # runs in about 15 seconds.
      - name: 💾 Install Graphics Driver Emulators
        run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo add-apt-repository ppa:kisak/kisak-mesa
          sudo apt-get install -qq mesa-vulkan-drivers binutils

      - name: 🤖 Setup Godot
        uses: chickensoft-games/setup-godot@v1
        with:
          # Version must include major, minor, and patch, and be >= 4.0.0
          # Pre-release label is optional.
          #
          # In this case, we are using the version from global.json.
          #
          # This allows checks on renovatebot PR's to succeed whenever
          # renovatebot updates the Godot SDK version.
          version: ${{ steps.infer_godot_version.outputs.godot_version }}

      - name: 🧑‍🔬 Generate .NET Bindings
        working-directory: GodotTestDriver.Tests
        run: godot --headless --build-solutions --quit || exit 0

      - name: 🌋 Run Tests in Godot
        working-directory: GodotTestDriver.Tests
        run: |
          xvfb-run godot --audio-driver Dummy --rendering-driver ${{ matrix.render-driver }} --run-tests --quit-on-finish
          echo "Finished running tests in Godot with emulated ${{ matrix.render-driver }} graphics."
